{
  "openapi": "3.0.0",
  "info": {
    "title": "Movies API",
    "description": "API to access data from the movies database",
    "version": "0.1.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "The local server"
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "summary": "Register a user",
        "tags": [
          "Authorization"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "example@email.com"
                  },
                  "gender": {
                    "type": "string",
                    "example": "Male"
                  },
                  "password": {
                    "type": "string",
                    "example": "secret_password"
                  },
                  "role": {
                    "type": "string",
                    "example": "Engineer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User Registered",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User Registered"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "Authenticates a user",
        "tags": [
          "Authorization"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "admin@email.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "adminpass"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User Logged in",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User Authenticated"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Invalid email or password",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Invalid Credentials"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      }
    },
    "/users/all": {
      "get": {
        "summary": "Returns all user data",
        "security": [
          {
            "BasicAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            },
            "required": false,
            "description": "the current page/set of data"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            },
            "required": false,
            "description": "the amount of data shown"
          }
        ],
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "description": "User is unauthorized or not logged in",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "put": {
        "summary": "Updates user data",
        "security": [
          {
            "BasicAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "the id of the user"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "new@mail.com"
                  },
                  "gender": {
                    "type": "string",
                    "example": "Female"
                  },
                  "password": {
                    "type": "string",
                    "example": "new_password"
                  },
                  "role": {
                    "type": "string",
                    "example": "Project Manager"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Users"
        ],
        "responses": {
          "201": {
            "description": "User data updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User Data Updated"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "User is unauthorized or not logged in",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Updates user data",
        "security": [
          {
            "BasicAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "the id of the user"
          }
        ],
        "tags": [
          "Users"
        ],
        "responses": {
          "201": {
            "description": "User data deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User Removed"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "User is unauthorized or not logged in",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      }
    },
    "/movies/": {
      "get": {
        "summary": "Returns all user data",
        "security": [
          {
            "BasicAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            },
            "required": false,
            "description": "the current page/set of data"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            },
            "required": false,
            "description": "the amount of data shown"
          }
        ],
        "tags": [
          "Movies"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Movie"
                }
              }
            }
          },
          "401": {
            "description": "User is not logged in",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Unauthenticated"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      }
    },
    "/movies/{title}": {
      "get": {
        "summary": "returns a movie with the specified title",
        "security": [
          {
            "BasicAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "title",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "the title if the movie"
          }
        ],
        "tags": [
          "Movies"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Movie"
                }
              }
            }
          },
          "401": {
            "description": "User is not logged in",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Unauthenticated"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Movie not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      }
    },
    "/movies/add": {
      "post": {
        "summary": "Add a new movie",
        "tags": [
          "Movies"
        ],
        "security": [
          {
            "BasicAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "example": "Oppenheimer"
                  },
                  "genres": {
                    "type": "string",
                    "example": "Documentary|Drama"
                  },
                  "year": {
                    "type": "integer",
                    "example": 2023
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Movie Added"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "User is unauthorized or not logged in",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      }
    },
    "/movies/{id}": {
      "put": {
        "summary": "Updates a movie",
        "security": [
          {
            "BasicAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "the id of the movie"
          }
        ],
        "tags": [
          "Movies"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "example": "Barbie"
                  },
                  "genre": {
                    "type": "string",
                    "example": "Drama|Romance"
                  },
                  "year": {
                    "type": "integer",
                    "example": 2023
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Movie Updated"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "User is unauthorized or not logged in",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Movie not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Updates a movie",
        "security": [
          {
            "BasicAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "the id of the movie"
          }
        ],
        "tags": [
          "Movies"
        ],
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Movie Deleted"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Movie not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          },
          "401": {
            "description": "User is unauthorized or not logged in",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "BasicAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "required": [
          "email",
          "gender",
          "password",
          "role"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "(supposed to be auto-generated) id of the user"
          },
          "email": {
            "type": "string",
            "description": "email of the user"
          },
          "gender": {
            "type": "string",
            "description": "the gender of the user"
          },
          "password": {
            "type": "string",
            "description": "the private password of the user"
          },
          "role": {
            "type": "string",
            "description": "the designated role of the user"
          }
        },
        "example": {
          "id": 101,
          "email": "example@email.com",
          "gender": "Male",
          "password": "secretpassword123",
          "role": "Construction Worker"
        }
      },
      "Movie": {
        "type": "object",
        "required": [
          "title",
          "genre",
          "year"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "the auto-generated id of the film"
          },
          "title": {
            "type": "string",
            "description": "The title of the film"
          },
          "genre": {
            "type": "string",
            "description": "the genre of the movie"
          },
          "release_year": {
            "type": "string",
            "description": "The year the film was released"
          }
        },
        "example": {
          "id": 133,
          "title": "The Hunger Games",
          "genre": "Action|Adventure|Drama|Romance",
          "year": 2014
        }
      },
      "NotFound": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Error Not Found"
          }
        }
      },
      "ServerError": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Internal Server Error"
          }
        }
      }
    }
  }
}